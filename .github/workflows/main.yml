name: Weekly Agent Role Optimization
on:
  schedule:
    # Runs every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:  # Allows manual trigger for testing

jobs:
  optimize-agents:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Debug - Check repository contents
      run: |
        echo "📁 Repository root contents:"
        ls -la
        echo "📁 Active Scripts directory:"
        ls -la "Active Scripts"/ || echo "Active Scripts directory not found"

    - name: Check environment secrets
      env:
        ZD_SUBDOMAIN: ${{ secrets.ZD_SUBDOMAIN }}
        ZD_EMAIL: ${{ secrets.ZD_EMAIL }}
        ZD_API_TOKEN: ${{ secrets.ZD_API_TOKEN }}
      run: |
        echo "🔍 Checking if secrets are set in environment..."
        if [ -z "$ZD_SUBDOMAIN" ]; then
          echo "❌ ERROR: ZD_SUBDOMAIN environment variable is empty!"
          echo "Secret value from GitHub: '${{ secrets.ZD_SUBDOMAIN }}'"
        else
          echo "✅ ZD_SUBDOMAIN is set: ${ZD_SUBDOMAIN}"
        fi
        if [ -z "$ZD_EMAIL" ]; then
          echo "❌ ERROR: ZD_EMAIL environment variable is empty!"
          echo "Secret value from GitHub: '${{ secrets.ZD_EMAIL }}'"
        else
          echo "✅ ZD_EMAIL is set: ${ZD_EMAIL}"
        fi
        if [ -z "$ZD_API_TOKEN" ]; then
          echo "❌ ERROR: ZD_API_TOKEN environment variable is empty!"
          echo "Secret value from GitHub: '${{ secrets.ZD_API_TOKEN }}'"
        else
          echo "✅ ZD_API_TOKEN is set (length: ${#ZD_API_TOKEN} characters)"
        fi
        echo "🔍 All environment variables:"
        env | grep ZD_ || echo "No ZD_ environment variables found"
    
    - name: Test Zendesk API connection
      env:
        ZD_SUBDOMAIN: ${{ secrets.ZD_SUBDOMAIN }}
        ZD_EMAIL: ${{ secrets.ZD_EMAIL }}
        ZD_API_TOKEN: ${{ secrets.ZD_API_TOKEN }}
      run: |
        echo "🧪 Testing Zendesk API connection..."
        python3 -c "
import os
import urllib.request
import base64
import json

subdomain = os.getenv('ZD_SUBDOMAIN', 'manualhelp')
email = os.getenv('ZD_EMAIL')
api_token = os.getenv('ZD_API_TOKEN')

print(f'Subdomain: {subdomain}')
print(f'Email: {email}')
print(f'API Token length: {len(api_token) if api_token else 0}')

if not all([subdomain, email, api_token]):
    print('❌ Missing credentials!')
    exit(1)

auth_string = f'{email}/token:{api_token}'
auth_header = f'Basic {base64.b64encode(auth_string.encode()).decode()}'
url = f'https://{subdomain}.zendesk.com/api/v2/users/me.json'

try:
    request = urllib.request.Request(url)
    request.add_header('Authorization', auth_header)
    
    with urllib.request.urlopen(request) as response:
        if response.getcode() == 200:
            data = json.loads(response.read().decode('utf-8'))
            user = data.get('user', {})
            print(f'✅ API connection successful!')
            print(f'   Authenticated as: {user.get(\"name\", \"Unknown\")} ({user.get(\"email\", \"Unknown\")})')
            print(f'   Role: {user.get(\"role\", \"Unknown\")}')
        else:
            print(f'❌ API returned status code: {response.getcode()}')
except Exception as e:
    print(f'❌ API connection failed: {e}')
    exit(1)
"
    
    - name: Run optimization (DRY RUN)
      env:
        ZD_SUBDOMAIN: ${{ secrets.ZD_SUBDOMAIN }}
        ZD_EMAIL: ${{ secrets.ZD_EMAIL }}
        ZD_API_TOKEN: ${{ secrets.ZD_API_TOKEN }}
      run: |
        echo "🚀 Running weekly agent optimization..."
        cd "Active Scripts"
        echo "📁 Current directory: $(pwd)"
        echo "📁 Files in directory:"
        ls -la
        echo "🔍 Environment check inside Active Scripts:"
        echo "ZD_SUBDOMAIN: ${ZD_SUBDOMAIN:-NOT_SET}"
        echo "ZD_EMAIL: ${ZD_EMAIL:-NOT_SET}"
        echo "ZD_API_TOKEN length: ${#ZD_API_TOKEN}"
        echo "🐍 Running Python script..."
        python weekly-agent-optimisation.py --log-level INFO 2>&1 || {
          echo "❌ Script failed with exit code: $?"
          echo "🔍 Checking if environment variables are available to Python:"
          python -c "import os; print('ZD_SUBDOMAIN:', os.getenv('ZD_SUBDOMAIN', 'NOT_SET')); print('ZD_EMAIL:', os.getenv('ZD_EMAIL', 'NOT_SET')); print('ZD_API_TOKEN length:', len(os.getenv('ZD_API_TOKEN', '')))"
          exit 1
        }
        
    - name: List output files
      if: always()
      run: |
        echo "📊 Files in Active Scripts:"
        ls -la "Active Scripts"/*.csv 2>/dev/null || echo "No CSV files found in Active Scripts"
        ls -la "Active Scripts"/*.log 2>/dev/null || echo "No log files found in Active Scripts"
        echo "📊 Files in root:"
        ls -la *.csv 2>/dev/null || echo "No CSV files found in root"
        ls -la *.log 2>/dev/null || echo "No log files found in root"
        
    - name: Upload results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: optimization-results-${{ github.run_number }}
        path: |
          Active Scripts/*.csv
          Active Scripts/*.log
          *.csv
          *.log
        retention-days: 30
